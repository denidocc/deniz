#!/usr/bin/env python3
"""–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤."""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ PATH
root_dir = Path(__file__).parent.parent
sys.path.insert(0, str(root_dir))

from app import create_app, db
from app.models.c_order_status import C_OrderStatus

def seed_order_statuses():
    """–ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤."""
    app = create_app()
    
    with app.app_context():
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å—Ç–∞—Ç—É—Å—ã
            if C_OrderStatus.query.count() > 0:
                print("‚úÖ –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Å—Ç–∞—Ç—É—Å–æ–≤ —É–∂–µ –∑–∞–ø–æ–ª–Ω–µ–Ω")
                return
            
            # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã
            statuses = [
                {
                    'name': '–ù–æ–≤—ã–π –∑–∞–∫–∞–∑',
                    'code': 'pending',
                    'description': '–ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω, –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è',
                    'color': '#28a745',
                    'icon': 'üü¢',
                    'sort_order': 1,
                    'can_transition_to': '["confirmed", "cancelled"]'
                },
                {
                    'name': '–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω',
                    'code': 'confirmed',
                    'description': '–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø–µ—á–∞—Ç—å',
                    'color': '#ffc107',
                    'icon': '‚úÖ',
                    'sort_order': 2,
                    'can_transition_to': '["completed", "cancelled"]'
                },
                {
                    'name': '–ó–∞–≤–µ—Ä—à–µ–Ω',
                    'code': 'completed',
                    'description': '–ó–∞–∫–∞–∑ –æ–ø–ª–∞—á–µ–Ω –∏ –∑–∞–≤–µ—Ä—à–µ–Ω',
                    'color': '#6c757d',
                    'icon': '‚ö´',
                    'sort_order': 3,
                    'can_transition_to': '[]'
                },
                {
                    'name': '–û—Ç–º–µ–Ω–µ–Ω',
                    'code': 'cancelled',
                    'description': '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω–µ–Ω',
                    'color': '#dc3545',
                    'icon': '‚ùå',
                    'sort_order': 4,
                    'can_transition_to': '[]'
                }
            ]
            
            for status_data in statuses:
                status = C_OrderStatus(**status_data)
                db.session.add(status)
            
            db.session.commit()
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {len(statuses)} —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤")
            
            # –í—ã–≤–æ–¥–∏–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
            for status in C_OrderStatus.query.order_by(C_OrderStatus.sort_order).all():
                print(f"  üìã {status.name} ({status.code}) - {status.icon} {status.color}")
                
        except Exception as e:
            db.session.rollback()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∞: {e}")
            raise

if __name__ == '__main__':
    seed_order_statuses()
