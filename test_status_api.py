#!/usr/bin/env python3
"""–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤."""

import requests
import json

def test_order_statuses_api():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤."""
    
    # –ë–∞–∑–æ–≤—ã–π URL (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à)
    base_url = "http://localhost:5000"
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint —Å—Ç–∞—Ç—É—Å–æ–≤
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤...")
        
        response = requests.get(f"{base_url}/waiter/api/order-statuses")
        
        print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üìã –ü–æ–ª—É—á–µ–Ω–æ —Å—Ç–∞—Ç—É—Å–æ–≤: {len(data.get('data', []))}")
            
            for status in data.get('data', []):
                print(f"  üìå {status['code']}: {status['name']}")
                print(f"     –¶–≤–µ—Ç: {status['color']}, –ò–∫–æ–Ω–∫–∞: {status['icon']}")
                print(f"     –ü–µ—Ä–µ—Ö–æ–¥—ã: {status['can_transition_to']}")
                print()
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print(f"üìÑ –û—Ç–≤–µ—Ç: {response.text}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    test_order_statuses_api()
