/**
 * WaiterAPI - API –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–≤
 */

class WaiterAPI {
    constructor() {
        this.baseUrl = ''; // –£–±–∏—Ä–∞–µ–º –±–∞–∑–æ–≤—ã–π URL, –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–µ –ø—É—Ç–∏
        this.token = this.getAuthToken();
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –≤—Å–µ –º–µ—Ç–æ–¥—ã –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É –∫–ª–∞—Å—Å–∞
        this.getDashboardStats = this.getDashboardStats.bind(this);

        this.getCalls = this.getCalls.bind(this);
        this.getOrders = this.getOrders.bind(this);
        this.getTables = this.getTables.bind(this);
        this.respondToCall = this.respondToCall.bind(this);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
     */
    getAuthToken() {
        // –î–ª—è —Å–µ—Å—Å–∏–æ–Ω–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ç–æ–∫–µ–Ω –Ω–µ –Ω—É–∂–µ–Ω
        return null;
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ HTTP –∑–∞–ø—Ä–æ—Å–∞
     */
    async request(endpoint, options = {}) {
        const url = `${this.baseUrl}${endpoint}`;
        
        const defaultOptions = {
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            credentials: 'same-origin' // –í–∫–ª—é—á–∞–µ–º cookies –¥–ª—è —Å–µ—Å—Å–∏–π
        };

        const requestOptions = {
            ...defaultOptions,
            ...options,
            headers: {
                ...defaultOptions.headers,
                ...options.headers
            }
        };

        try {
            const response = await fetch(url, requestOptions);
            
            if (!response.ok) {
                throw new Error(`HTTP ${response.status}: ${response.statusText}`);
            }

            const contentType = response.headers.get('content-type');
            if (contentType && contentType.includes('application/json')) {
                return await response.json();
            } else {
                return await response.text();
            }
        } catch (error) {
            console.error(`API Error for ${endpoint}:`, error);
            throw error;
        }
    }

    /**
     * GET –∑–∞–ø—Ä–æ—Å
     */
    async get(endpoint) {
        return this.request(endpoint, { method: 'GET' });
    }

    /**
     * POST –∑–∞–ø—Ä–æ—Å
     */
    async post(endpoint, data) {
        return this.request(endpoint, {
            method: 'POST',
            body: JSON.stringify(data)
        });
    }

    /**
     * PUT –∑–∞–ø—Ä–æ—Å
     */
    async put(endpoint, data) {
        return this.request(endpoint, {
            method: 'PUT',
            body: JSON.stringify(data)
        });
    }

    /**
     * DELETE –∑–∞–ø—Ä–æ—Å
     */
    async delete(endpoint) {
        return this.request(endpoint, { method: 'DELETE' });
    }

    // === DASHBOARD API ===

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–∞—à–±–æ—Ä–¥–∞
     */
    async getDashboardStats() {
        return this.get('/waiter/api/dashboard/stats');
    }

    // === ORDERS API ===

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–∫–∞–∑–æ–≤
     */
    async getOrders(filters = {}) {
        const queryParams = new URLSearchParams(filters).toString();
        const endpoint = queryParams ? `/waiter/api/orders?${queryParams}` : '/waiter/api/orders';
        return this.get(endpoint);
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –ø–æ ID
     */
    async getOrder(orderId) {
        return this.get(`/waiter/api/orders/${orderId}`);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞
     */
    async updateOrderStatus(orderId, status) {
        return this.put(`/orders/${orderId}/status`, { status });
    }

    // === TABLES API ===

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å—Ç–æ–ª–æ–≤
     */
    async getTables() {
        return this.get('/waiter/api/tables');
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–æ–ª–∞ –ø–æ ID
     */
    async getTable(tableId) {
        return this.get(`/tables/${tableId}`);
    }

    // === CALLS API ===

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—ã–∑–æ–≤–æ–≤ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç–∞
     */
    async getCalls(filters = {}) {
        const queryParams = new URLSearchParams(filters).toString();
        const endpoint = queryParams ? `/waiter/api/calls?${queryParams}` : '/waiter/api/calls';
        return this.get(endpoint);
    }

    /**
     * –û—Ç–≤–µ—Ç –Ω–∞ –≤—ã–∑–æ–≤
     */
    async respondToCall(callId, action = 'respond') {
        return this.put(`/calls/${callId}`, { action });
    }


}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä API
window.WaiterAPI = new WaiterAPI();

// –û—Ç–ª–∞–¥–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∑–∫–∏
console.log('üîÑ WaiterAPI —Å–æ–∑–¥–∞–Ω:', window.WaiterAPI);
console.log('üîç getDashboardStats —Ç–∏–ø:', typeof window.WaiterAPI.getDashboardStats);

console.log('üîç getCalls —Ç–∏–ø:', typeof window.WaiterAPI.getCalls);