"""
–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API –¥–ª—è DENIZ Restaurant.

OpenAPI/Swagger —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–ª—è –≤—Å–µ—Ö API endpoints.
"""

API_DOCS = {
    "openapi": "3.0.0",
    "info": {
        "title": "DENIZ Restaurant API",
        "description": """
        REST API –¥–ª—è —Å–∏—Å—Ç–µ–º—ã –∑–∞–∫–∞–∑–æ–≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞ DENIZ.
        
        ## –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å:
        - üçΩÔ∏è –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–Ω—é —Å –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π (—Ä—É—Å—Å–∫–∏–π, —Ç—É—Ä–∫–º–µ–Ω—Å–∫–∏–π, –∞–Ω–≥–ª–∏–π—Å–∫–∏–π)
        - üîç –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –±–ª—é–¥
        - üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–µ–Ω—é
        - üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
        - üñ®Ô∏è –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø—Ä–∏–Ω—Ç–µ—Ä–∞–º–∏ (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)
        
        ## –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:
        - Rate limiting
        - –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        - –ó–∞—â–∏—Ç–∞ –æ—Ç XSS –∏ SQL –∏–Ω—ä–µ–∫—Ü–∏–π
        - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        
        ## –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —è–∑—ã–∫–∏:
        - `ru` - –†—É—Å—Å–∫–∏–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
        - `tk` - –¢—É—Ä–∫–º–µ–Ω—Å–∫–∏–π
        - `en` - –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
        """,
        "version": "1.0.0",
        "contact": {
            "name": "DENIZ Restaurant",
            "email": "info@deniz-restaurant.com"
        },
        "license": {
            "name": "Proprietary",
            "url": "https://deniz-restaurant.com/license"
        }
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Development server"
        },
        {
            "url": "https://api.deniz-restaurant.com",
            "description": "Production server"
        }
    ],
    "tags": [
        {
            "name": "Menu",
            "description": "API endpoints –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–µ–Ω—é —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞"
        },
        {
            "name": "Orders",
            "description": "API endpoints –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞–º–∏ (–ø–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è)"
        },
        {
            "name": "System",
            "description": "–°–∏—Å—Ç–µ–º–Ω—ã–µ API endpoints"
        }
    ],
    "paths": {
        "/api/menu": {
            "get": {
                "summary": "–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –º–µ–Ω—é",
                "description": "–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –º–µ–Ω—é —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏ –∏ –±–ª—é–¥–∞–º–∏",
                "tags": ["Menu"],
                "parameters": [
                    {
                        "name": "lang",
                        "in": "query",
                        "description": "–Ø–∑—ã–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞",
                        "required": False,
                        "schema": {
                            "type": "string",
                            "enum": ["ru", "tk", "en"],
                            "default": "ru"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "ID –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏",
                        "required": False,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "preparation_type",
                        "in": "query",
                        "description": "–¢–∏–ø –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è",
                        "required": False,
                        "schema": {
                            "type": "string",
                            "enum": ["kitchen", "bar"]
                        }
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "–¢–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏",
                        "required": False,
                        "schema": {
                            "type": "boolean",
                            "default": True
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "–ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "–ú–µ–Ω—é —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "categories": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Category"
                                                    }
                                                },
                                                "total_categories": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "total_items": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "language": {
                                                    "type": "string",
                                                    "example": "ru"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/system/info": {
            "get": {
                "summary": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ",
                "description": "–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–∏—Å—Ç–µ–º–µ –∏ –≤–µ—Ä—Å–∏–∏ API",
                "tags": ["System"],
                "responses": {
                    "200": {
                        "description": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SystemInfo"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/system/health": {
            "get": {
                "summary": "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã",
                "description": "Healthcheck endpoint –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞",
                "tags": ["System"],
                "responses": {
                    "200": {
                        "description": "–°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "healthy"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-01-29T10:30:00Z"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "1.0.0"
                                        },
                                        "uptime": {
                                            "type": "number",
                                            "description": "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –≤ —Å–µ–∫—É–Ω–¥–∞—Ö",
                                            "example": 3600.5
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "–°–∏—Å—Ç–µ–º–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞"
                    },
                    "name_tk": {
                        "type": "string",
                        "example": "–´—Å—ã–∫ –∞—à–ª–∞—Ä"
                    },
                    "name_en": {
                        "type": "string",
                        "example": "Hot dishes"
                    },
                    "sort_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuItem"
                        }
                    },
                    "items_count": {
                        "type": "integer",
                        "example": 8
                    }
                }
            },
            "MenuItem": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 15
                    },
                    "name": {
                        "type": "string",
                        "example": "–ë–æ—Ä—â –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π"
                    },
                    "description": {
                        "type": "string",
                        "example": "–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω—ã–π —É–∫—Ä–∞–∏–Ω—Å–∫–∏–π –±–æ—Ä—â"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 300.00
                    },
                    "image_url": {
                        "type": "string",
                        "example": "/images/borsch.jpg"
                    },
                    "preparation_type": {
                        "type": "string",
                        "enum": ["kitchen", "bar"],
                        "example": "kitchen"
                    },
                    "estimated_time": {
                        "type": "integer",
                        "example": 15
                    },
                    "has_size_options": {
                        "type": "boolean",
                        "example": False
                    },
                    "can_modify_ingredients": {
                        "type": "boolean",
                        "example": True
                    },
                    "sort_order": {
                        "type": "integer",
                        "example": 1
                    },
                    "category": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "–ì–æ—Ä—è—á–∏–µ –±–ª—é–¥–∞"
                            }
                        }
                    }
                }
            },
            "SystemInfo": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "DENIZ Restaurant API"
                    },
                    "version": {
                        "type": "string",
                        "example": "1.0.0"
                    },
                    "build": {
                        "type": "string",
                        "example": "dev"
                    },
                    "environment": {
                        "type": "string",
                        "example": "development"
                    },
                    "features": {
                        "type": "object",
                        "properties": {
                            "menu_api": {
                                "type": "boolean",
                                "example": True
                            },
                            "orders_api": {
                                "type": "boolean",
                                "example": False
                            },
                            "auth_api": {
                                "type": "boolean",
                                "example": False
                            },
                            "printer_integration": {
                                "type": "boolean",
                                "example": False
                            }
                        }
                    },
                    "supported_languages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "example": ["ru", "tk", "en"]
                    },
                    "database": {
                        "type": "object",
                        "properties": {
                            "status": {
                                "type": "string",
                                "example": "connected"
                            },
                            "type": {
                                "type": "string",
                                "example": "PostgreSQL"
                            }
                        }
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "required": ["status", "message", "data"],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": ["error"],
                        "example": "error"
                    },
                    "message": {
                        "type": "string",
                        "example": "–û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏"
                    },
                    "data": {
                        "type": "object",
                        "example": {}
                    },
                    "errors": {
                        "type": "object",
                        "description": "–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–æ–∫ –≤–∞–ª–∏–¥–∞—Ü–∏–∏",
                        "example": {
                            "field_name": "–û—à–∏–±–∫–∞ –≤ –ø–æ–ª–µ"
                        }
                    },
                    "code": {
                        "type": "string",
                        "description": "–ö–æ–¥ –æ—à–∏–±–∫–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏",
                        "example": "VALIDATION_ERROR"
                    }
                }
            }
        }
    }
}