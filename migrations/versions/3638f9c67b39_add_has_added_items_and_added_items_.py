"""Add has_added_items and added_items_confirmed to orders

Revision ID: 3638f9c67b39
Revises: 11729d82ce06
Create Date: 2025-08-29 17:39:43.603546

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '3638f9c67b39'
down_revision = '11729d82ce06'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('orders', schema=None) as batch_op:
            # добавляем колонки с дефолтом False
            batch_op.add_column(
                sa.Column('has_added_items', sa.Boolean(), nullable=False, server_default='false')
            )
            batch_op.add_column(
                sa.Column('added_items_confirmed', sa.Boolean(), nullable=False, server_default='false')
            )

            # (если нужно) удаляем старые колонки
            batch_op.drop_column('is_confirmed_items_locked')
            batch_op.drop_column('re_confirmed_at')

        # убираем server_default, чтобы дефолт задавался кодом/ORM
    op.alter_column('orders', 'has_added_items', server_default=None)
    op.alter_column('orders', 'added_items_confirmed', server_default=None)

    # ### end Alembic commands ###


def downgrade():
    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.add_column(
            sa.Column('re_confirmed_at', postgresql.TIMESTAMP(timezone=True), nullable=True)
        )
        batch_op.add_column(
            sa.Column('is_confirmed_items_locked', sa.Boolean(), nullable=False, server_default='false')
        )
        batch_op.drop_column('added_items_confirmed')
        batch_op.drop_column('has_added_items')

    # ### end Alembic commands ###
